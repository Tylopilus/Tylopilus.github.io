{"version":3,"sources":["components/SideDrawer/DrawerToggleButton.jsx","components/NavBar/NavBar.jsx","components/Admin/AddPost.js","components/SideDrawer/SideDrawer.jsx","components/Backdrop/Backdrop.jsx","components/Tournaments/SingleTournament/SingleTournament.jsx","components/Tournaments/Tournaments.jsx","components/Home/Home.jsx","components/Footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["drawerToggleButton","props","react_default","a","createElement","className","onClick","click","NavBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loading","list","_this2","setState","fetch","then","res","json","data","catch","error","console","log","links","map","r","i","key","react_router_dom","to","url","id","exact","activeClassName","name","SideDrawer_DrawerToggleButton","clickHandler","React","Component","AddPost","handleChange","event","_event$target","target","value","prev","e","parseInt","handleClick","edit","handleSubmit","method","body","JSON","stringify","headers","Content-Type","err","editType","type","placeholder","onChange","setID","newName","_this3","style","paddingTop","SideDrawer","drawerClass","show","Backdrop","SingleTournament","visible","prevState","maxHeight","Tournaments","Fragment","fontStyle","Tournaments_SingleTournament_SingleTournament","Home","fontSize","fontWeight","Footer","App","sideDrawerOpen","DrawerToggleClickHandler","backdrop","components_Backdrop_Backdrop","components_NavBar_NavBar","components_SideDrawer_SideDrawer","react_router","path","component","Tournament","components_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.489ef657.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nimport \"./DrawerToggleButton.css\"\r\n\r\nconst drawerToggleButton = props => (\r\n    <button className=\"toggle-button\" onClick={props.click}>\r\n        <div className=\"toggle-button-line\"/>\r\n        <div className=\"toggle-button-line\"/>\r\n        <div className=\"toggle-button-line\"/>\r\n    </button> \r\n);\r\n\r\nexport default drawerToggleButton;\r\n\r\n","import React from \"react\"\r\nimport {Link, NavLink} from \"react-router-dom\"\r\nimport \"./NavBar.css\"\r\nimport DrawerToggleButton from \"../SideDrawer/DrawerToggleButton\"\r\n\r\nclass NavBar extends React.Component {\r\n    constructor(){\r\n        super()\r\n\r\n        this.state={\r\n            loading: false,\r\n            list: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({loading: true})\r\n        fetch(\"/api/urls\")\r\n        .then(res => res.json())\r\n        .then(res => this.setState({\r\n            loading: false, \r\n            list: res.data}))\r\n        .catch(error => console.log(\"Cannot Fetch Menu Items\", error))\r\n\r\n\r\n        //  this.lookupInterval = setInterval(() => {\r\n        //     fetch(\"/api/urls\")\r\n        //     .then(res => res.json())\r\n        //     .then(res => this.setState({\r\n        //         loading: false, \r\n        //         list: res.data}))\r\n        //     .catch(console.log(\"Cannot Fetch Menu Items\"))\r\n        //  }, 5000)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        // clearInterval(this.lookupInterval)\r\n    }\r\n\r\n    render(){\r\n        //const myArray = [{ id: 1, name: \"app\" }, { id: 2, name: \"info\"}]\r\n        //const links = myArray.map(e =>  <Link to={e.name} key={e.id}>{e.name}</Link>)\r\n        const links = this.state.list.map((r, i) => (\r\n            <li className=\"navBar__navigation-item\" key={i}>\r\n                <NavLink \r\n                to={r.url} \r\n                key={r.id} \r\n                exact\r\n                className=\"navBar__navigation-item-normal\"\r\n                activeClassName=\"navBar__navigation-item-active\"\r\n                >\r\n                    {r.name}\r\n                </NavLink>\r\n            </li>))\r\n        return(\r\n            <div className=\"navBar\">\r\n                <nav className=\"navBar__navigation\">\r\n                    <div className=\"navBar__control\">\r\n                        <div className=\"navBar__button\"><DrawerToggleButton click={this.props.clickHandler}/></div>\r\n                        <div className=\"navBar__logo\"><Link to=\"/\">Beer Pong Hannover</Link></div>\r\n                    </div>\r\n                    <div className=\"navBar__navigation-items\">\r\n                        <ul>\r\n                            {this.state.loading ? \"loading navigation\" : links}\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar","import React from \"react\"\r\n\r\nclass AddPost extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            setID: \"\",\r\n            newName: \"\",\r\n            list: [],\r\n            loading: false,\r\n            edit: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({loading: true})\r\n        fetch(\"/api/urls\")\r\n        .then(res => res.json())\r\n        .then(res => this.setState({\r\n            loading: false, \r\n            list: res.data}))\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const {id, value} = event.target\r\n        this.setState(\r\n            prev => {\r\n                prev.list.map(e => {\r\n                    if(parseInt(e.id) === parseInt(id)){\r\n                        prev.list[e.id-1].name = value\r\n                        console.log(prev.list[e.id-1].name)\r\n                    }\r\n                    return true\r\n                })\r\n                return prev\r\n            }\r\n        )\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        this.setState(\r\n            prev => {\r\n                prev.list.map(res => {\r\n                    if(parseInt(res.id) === parseInt(e.id)){\r\n                        prev.list[e.id-1].edit = !prev.list[e.id-1].edit\r\n                        //console.log(prev.list[e.id-1].edit)\r\n                        if(!prev.list[e.id-1].edit)\r\n                            this.handleSubmit(e)\r\n                    }\r\n\r\n                    return true\r\n                })\r\n                return prev\r\n            }\r\n        )\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n        fetch('/api/urls/' + e.id, {\r\n        method: 'PUT',\r\n        body: JSON.stringify({\"data\": e.name}),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n        }).then(res => res)\r\n        .catch(err => {console.log(err); return err});\r\n    }\r\n\r\n    editType = (e) => {\r\n        if (e.edit)\r\n        return (\r\n          <input\r\n            type=\"text\"\r\n            name={e.name}\r\n            placeholder={e.name}\r\n            value={e.name}\r\n            id={e.id}\r\n            onChange={this.handleChange}\r\n          />\r\n        );\r\n  \r\n      return <span>{e.name}</span>;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{paddingTop: \"56px\"}}>\r\n                <ul>\r\n                    {this.state.loading ? \"loading navigation\" : this.state.list.map( e => {\r\n                        return <li key={e.id}>{this.editType(e)} <i className=\"far fa-edit\" onClick={() => this.handleClick(e)}/></li>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPost","import React from \"react\"\r\nimport \"./SideDrawer.css\"\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nclass SideDrawer extends React.Component {\r\n    \r\n    constructor(){\r\n        super()\r\n\r\n        this.state={\r\n            loading: false,\r\n            list: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({loading: true})\r\n        fetch(\"/api/urls\")\r\n        .then(res => res.json())\r\n        .then(res => this.setState({\r\n            loading: false, \r\n            list: res.data}))\r\n        .catch(error => console.log(\"Cannot Fetch Menu Items\", error))\r\n\r\n\r\n        //  this.lookupInterval = setInterval(() => {\r\n        //     fetch(\"/api/urls\")\r\n        //     .then(res => res.json())\r\n        //     .then(res => this.setState({\r\n        //         loading: false, \r\n        //         list: res.data}))\r\n        //  }, 5000)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        // clearInterval(this.lookupInterval)\r\n    }\r\n\r\n\r\n    render(){\r\n        const links = this.state.list.map((r, i) => (\r\n            <li className=\"navBar__navigation-item\" key={i}>\r\n                <NavLink \r\n                to={r.url} \r\n                key={r.id} \r\n                exact\r\n                className=\"navBar__navigation-item-normal\"\r\n                activeClassName=\"navBar__navigation-item-active\"\r\n                onClick={this.props.clickHandler}\r\n                >\r\n                    {r.name}\r\n                </NavLink>\r\n            </li>))\r\n        let drawerClass = [\"side-drawer\"];\r\n        if(this.props.show){\r\n            drawerClass = [\"side-drawer open\"]\r\n        }\r\n        return(\r\n        <nav className={drawerClass}>\r\n            <ul>\r\n                {this.state.loading ? \"loading navigation\" : links}\r\n            </ul>\r\n        </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SideDrawer","import React from \"react\"\r\nimport \"./Backdrop.css\"\r\n\r\nconst Backdrop = props => (\r\n    <div className=\"backdrop\" onClick={props.clickHandler}/>\r\n)\r\n\r\nexport default Backdrop","import React from \"react\"\r\nimport \"./SingleTournament.css\"\r\n\r\nclass SingleTournament extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            visible: false\r\n        }\r\n    }\r\n    clickHandler(e) {\r\n        this.setState(prevState => (\r\n            prevState.visible = !prevState.visible\r\n        ))\r\n    }\r\n\r\n    render(){\r\n        let visible = this.state.visible ? \"150px\" : \"0px\"\r\n        return(\r\n            <div>\r\n                <div className=\"tournamentList\"  onClick={(e) => {this.clickHandler(e)} }>\r\n                    <div className=\"tournamentName\">\r\n                    Hanomacken Tournier 2019 #5\r\n                    </div>\r\n                    <div className=\"tournamentDate\">\r\n                    29.03.2019\r\n                    </div>\r\n                    <div className=\"clear\" />\r\n                    <div className=\"tournamentContent\" style={{maxHeight: visible, paddingTop: \"10px\"}}>\r\n                        <table>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Anmeldung:</td>\r\n                                    <td>Offen</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Wochentag:</td>\r\n                                    <td>Freitag</td>\r\n                                </tr>\r\n    \r\n                                <tr>\r\n                                    <td>Teilnehmer:</td>\r\n                                    <td>20/48</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Eintritt:</td>\r\n                                    <td>5€</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <button onClick={console.log(\"anmelden\")}>Jetzt anmelden</button>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SingleTournament","import React from \"react\"\r\nimport \"./Tournaments.css\"\r\nimport SingleTournament from \"./SingleTournament/SingleTournament\"\r\nconst Tournaments = props => (\r\n    <React.Fragment>\r\n        <div className=\"tournaments_parallax\"></div>\r\n        <div className=\"tournament_content\">\r\n            <h1>Anstehende Turniere</h1>\r\n            <div className=\"tournament_content_flex\">\r\n                <div>\r\n                    <span style={{fontStyle: \"italic\"}}>Name des Turniers</span>\r\n                </div>\r\n                <div>\r\n                <span style={{fontStyle: \"italic\"}}>Datum des Turniers</span>\r\n                </div>      \r\n            </div>\r\n            <hr />\r\n            <SingleTournament />\r\n            <SingleTournament />\r\n            <SingleTournament />\r\n            <SingleTournament />\r\n        </div>\r\n        <div className=\"tournament_content\" style={{paddingTop: \"80px\"}}>\r\n            <h1>Vergangene Turniere</h1>\r\n            <div className=\"tournament_content_flex\">\r\n                <div >\r\n                    <span style={{fontStyle: \"italic\"}}>Name des Turniers</span>\r\n                </div>\r\n                <div>\r\n                    <span style={{fontStyle: \"italic\"}}>Datum des Turniers</span>\r\n                </div>      \r\n            </div>\r\n            <hr />\r\n        </div>\r\n    </React.Fragment>\r\n)\r\n\r\nexport default Tournaments","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport \"./Home.css\"\r\n\r\nconst Home = (props) => (\r\n\r\n    <React.Fragment>\r\n        { <div className=\"home__parallax\" ></div>}\r\n        <div className=\"home_content\">\r\n            <div className=\"home_h1\">\r\n                <h1>Wir sind Beer Pong Hannover!</h1> \r\n            </div>\r\n            <div className=\"homeFlex\">\r\n                <p>\r\n                    Die Community für Turniere und mehr! Seit 2012 veranstalten wir unregelmäßig Beer Pong Turniere in Hannover und Umgebung.\r\n                    Unsere Heimat ist die Cafeteria hanOMacke e.V. auf dem Conti-Campus der Leibniz Universität Hannover.\r\n                </p>\r\n                <p>\r\n                    Neben den hanOMacke-Turnieren nutzen wir jede Chance ein solides Turnier in der Region Hannover zu veranstalten. Hier findet ihr eine Übersicht über diese, sowie Ankündigungen von zukünftigen Turnieren\r\n                </p>\r\n            </div>\r\n            <Link to=\"/turniere\" style={{fontSize: \"1.5rem\", fontWeight: \"600\"}}>Zu den Turnieren</Link>\r\n        </div>\r\n    </React.Fragment>\r\n)\r\n\r\nexport default Home","import React from \"react\"\r\nimport \"./Footer.css\"\r\n\r\nconst Footer = (props) => (\r\n    <div className=\"footer-main\">\r\n        <div className=\"footer-content\">\r\n            <div className=\"footer-item\"><i className=\"fab fa-instagram\"></i></div>\r\n            <div className=\"footer-item\"><i className=\"fab fa-facebook-square\"></i></div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Footer","import React from 'react';\n// import Header from \"./components/MemeGenerator/Header\"\n// import MemeGenerator from \"./components/MemeGenerator/MemeGenerator\"\nimport {BrowserRouter, Route, Switch, Redirect} from \"react-router-dom\"\nimport NavBar from \"./components/NavBar/NavBar\"\nimport AddPost from \"./components/Admin/AddPost\"\nimport \"./index.css\"\nimport SideDrawer from \"./components/SideDrawer/SideDrawer\"\nimport Backdrop from \"./components/Backdrop/Backdrop\"\nimport Tournament from \"./components/Tournaments/Tournaments\"\nimport Home from \"./components/Home/Home\"\nimport Footer from \"./components/Footer/Footer\"\n\n// function App2() {\n//   return(\n//     <div className=\"content\" style={{marginTop: \"64px\"}}>\n//       <Header />\n//       <MemeGenerator />\n//     </div>\n//   )\n// }\n\nclass App extends React.Component{\n    state = {\n      sideDrawerOpen: false\n    }\n    \n    DrawerToggleClickHandler = () => {\n      this.setState(prevState => {\n        return prevState.sideDrawerOpen = !prevState.sideDrawerOpen\n      })\n    }\n\n    render(){\n      let backdrop\n\n      if(this.state.sideDrawerOpen){\n        backdrop = <Backdrop clickHandler={this.DrawerToggleClickHandler}/>\n      }\n\n      return(\n        <React.Fragment>\n          <BrowserRouter>\n            <NavBar clickHandler={this.DrawerToggleClickHandler}/>\n            <SideDrawer show={this.state.sideDrawerOpen} clickHandler={this.DrawerToggleClickHandler}/>\n            {backdrop}\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/turniere\" component={Tournament} />\n                <Route path=\"/admin\" component={AddPost} />\n                <Route component={() => <Redirect to=\"/\" />} />  \n            </Switch>\n            <Footer />\n          </BrowserRouter>\n        </React.Fragment>\n        )\n      }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n//ReactDOM.render(<WrapperWithFooter />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}